@model ClinicaP2.Models.Medico

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}

<h2 class="bg-info">Registrar Medico</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Medico</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
     

        <div class="form-group">
            @Html.LabelFor(model => model.CodEspe, "CodEspe", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CodEspe", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CodEspe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomTra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomTra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomTra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApeTra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApeTra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApeTra, "", new { @class = "text-danger" })
            </div>
        </div>
        @* GENERO  TEXTO LLENADO MANUALMENTE *@
        <div class="form-group">
            @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                   List<SelectListItem> lst = new List<SelectListItem>();
                    lst.Add(new SelectListItem() { Text = "Hombre", Value = "1" });
                    lst.Add(new SelectListItem() { Text = "Mujer", Value = "0" });
                    ViewBag.lstseleccionada = lst;
                }

                @Html.DropDownListFor(x => x.Genero, lst, "Seleccionar",new { @class="form-control"})

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DniTra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DniTra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DniTra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorreoTra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorreoTra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorreoTra, "", new { @class = "text-danger" })
            </div>
        </div>
        @* ESTADO *@
        <div class="form-group">
            @Html.LabelFor(model => model.EstaTra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> lis = new List<SelectListItem>();
                    lis.Add(new SelectListItem() { Text = "Activo", Value = "Activo" });
                    lis.Add(new SelectListItem() { Text = "Inactivo", Value = "Inactivo" });
                }
                @Html.DropDownListFor(x => x.EstaTra, lis, "Seleccionar", new { @class = "form-control" })
            </div>
        </div>  

        <div class="form-group">
            @Html.LabelFor(model => model.Codmod, "Codmod", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Codmod", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Codmod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Registrar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div class="btn btn-default" >
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
