@model ClinicaP2.Models.RESERVACION


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<SelectListItem> lst = (List<SelectListItem>)ViewBag.lstespe;
    List<SelectListItem> lst2 = (List<SelectListItem>)ViewBag.lstme;
    //List<ClinicaP2.Models.ViewModel.EspecialiViewmodel> lst1 = (List<ClinicaP2.Models.ViewModel.EspecialiViewmodel>)ViewBag.listaepe;

}

<h2 class="bg-info">Nueva Cita medica</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>RESERVACION</h4>
        <hr />

        @*CONTROL FECHA*@
        <div class="form-group">
            @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
            </div>
        </div>
        @*CONTROL PACIENTE*@
        <div class="form-group">
            @Html.LabelFor(model => model.CodPac, "Paciente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CodPac", null, htmlAttributes: new { @class = "form-control" })

            </div>
        </div>


        <div class="panel panel-primary ">
            <div class="panel-heading">
                Busqueda de Medicos por Especialidad
            </div>
            <div class="panel-body">

                @* Div para colocar en una linea los controles/IMPLEMENTACION DE AJAX  *@

                @{
                    Html.RenderAction("_SearchPartial", "RESERVACIONs");
                }
                <script>
                $(document).ready(function () {
                    $("#ddespecialidad").change(function () {
                        $.get("/RESERVACIONs/GetTerritoriesList", { CodEspe: $("#ddespecialidad").val() }, function (data) {
                            // VACIAMOS EL DropDownList
                            $("#ddmedicos").empty();
                            // AÑADIMOS UN NUEVO label CON EL NOMBRE DEL ELEMENTO SELECCIONADO
                            $("#ddmedicos").append("<option value> -- Seleccionar Medicos de " + $("#ddmedicos option:selected").text() + " --</option>")
                            // CONSTRUIMOS EL DropDownList A PARTIR DEL RESULTADO Json (data)
                            $.each(data, function (index, row) {
                                $("#ddmedicos").append("<option value='" + row.codmed + "'>" + row.NomTra + "</option>")
                            });
                        });
                    });
                });
                </script>



            </div>
        </div>
        @* CONTROL ESPECIALIDAD Y MEDICO *@





        @* asfasfasf *@


        <div class="form-group">
            @Html.LabelFor(model => model.precio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodPay, "CodPay", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CodPay", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CodPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Codestado, "Codestado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Codestado", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Codestado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodUser, "CodUser", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CodUser", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CodUser, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
