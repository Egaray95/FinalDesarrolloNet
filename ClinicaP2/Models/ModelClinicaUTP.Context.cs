//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClinicaP2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bdclinicEntities1 : DbContext
    {
        public bdclinicEntities1()
            : base("name=bdclinicEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Especialidad> Especialidad { get; set; }
        public virtual DbSet<ESTADO> ESTADO { get; set; }
        public virtual DbSet<HORARIOATENCION> HORARIOATENCION { get; set; }
        public virtual DbSet<HORAS> HORAS { get; set; }
        public virtual DbSet<Medico> Medico { get; set; }
        public virtual DbSet<MODULO> MODULO { get; set; }
        public virtual DbSet<Paciente> Paciente { get; set; }
        public virtual DbSet<PAYMET> PAYMET { get; set; }
        public virtual DbSet<RESERVACION> RESERVACION { get; set; }
        public virtual DbSet<USUARIOS> USUARIOS { get; set; }
    
        public virtual ObjectResult<getmedporid_Result> getmedporid(string idmedi)
        {
            var idmediParameter = idmedi != null ?
                new ObjectParameter("idmedi", idmedi) :
                new ObjectParameter("idmedi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getmedporid_Result>("getmedporid", idmediParameter);
        }
    
        public virtual ObjectResult<LISTARESERVA_Result> LISTARESERVA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LISTARESERVA_Result>("LISTARESERVA");
        }
    
        public virtual int SP_ADIMEDICO(string cODESPE, string nOMTRA, string aPETRA, string gENERO, string dNITRA, string cORREOTRA, string eSTATRA, string cODMOD)
        {
            var cODESPEParameter = cODESPE != null ?
                new ObjectParameter("CODESPE", cODESPE) :
                new ObjectParameter("CODESPE", typeof(string));
    
            var nOMTRAParameter = nOMTRA != null ?
                new ObjectParameter("NOMTRA", nOMTRA) :
                new ObjectParameter("NOMTRA", typeof(string));
    
            var aPETRAParameter = aPETRA != null ?
                new ObjectParameter("APETRA", aPETRA) :
                new ObjectParameter("APETRA", typeof(string));
    
            var gENEROParameter = gENERO != null ?
                new ObjectParameter("GENERO", gENERO) :
                new ObjectParameter("GENERO", typeof(string));
    
            var dNITRAParameter = dNITRA != null ?
                new ObjectParameter("DNITRA", dNITRA) :
                new ObjectParameter("DNITRA", typeof(string));
    
            var cORREOTRAParameter = cORREOTRA != null ?
                new ObjectParameter("CORREOTRA", cORREOTRA) :
                new ObjectParameter("CORREOTRA", typeof(string));
    
            var eSTATRAParameter = eSTATRA != null ?
                new ObjectParameter("ESTATRA", eSTATRA) :
                new ObjectParameter("ESTATRA", typeof(string));
    
            var cODMODParameter = cODMOD != null ?
                new ObjectParameter("CODMOD", cODMOD) :
                new ObjectParameter("CODMOD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADIMEDICO", cODESPEParameter, nOMTRAParameter, aPETRAParameter, gENEROParameter, dNITRAParameter, cORREOTRAParameter, eSTATRAParameter, cODMODParameter);
        }
    
        public virtual int SP_ADIPACIENTES(string nOMPAC, string aPEPAC, string tELEPAC, string dNIPAC, string gENERO, string eSTAPAC)
        {
            var nOMPACParameter = nOMPAC != null ?
                new ObjectParameter("NOMPAC", nOMPAC) :
                new ObjectParameter("NOMPAC", typeof(string));
    
            var aPEPACParameter = aPEPAC != null ?
                new ObjectParameter("APEPAC", aPEPAC) :
                new ObjectParameter("APEPAC", typeof(string));
    
            var tELEPACParameter = tELEPAC != null ?
                new ObjectParameter("TELEPAC", tELEPAC) :
                new ObjectParameter("TELEPAC", typeof(string));
    
            var dNIPACParameter = dNIPAC != null ?
                new ObjectParameter("DNIPAC", dNIPAC) :
                new ObjectParameter("DNIPAC", typeof(string));
    
            var gENEROParameter = gENERO != null ?
                new ObjectParameter("GENERO", gENERO) :
                new ObjectParameter("GENERO", typeof(string));
    
            var eSTAPACParameter = eSTAPAC != null ?
                new ObjectParameter("ESTAPAC", eSTAPAC) :
                new ObjectParameter("ESTAPAC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADIPACIENTES", nOMPACParameter, aPEPACParameter, tELEPACParameter, dNIPACParameter, gENEROParameter, eSTAPACParameter);
        }
    
        public virtual int SP_ADIRSERVAS(Nullable<System.DateTime> fECHA, string cODPAC, string cODMED, Nullable<double> pRECIO, string cODPAY, string cODESTADO, string cODUSER)
        {
            var fECHAParameter = fECHA.HasValue ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(System.DateTime));
    
            var cODPACParameter = cODPAC != null ?
                new ObjectParameter("CODPAC", cODPAC) :
                new ObjectParameter("CODPAC", typeof(string));
    
            var cODMEDParameter = cODMED != null ?
                new ObjectParameter("CODMED", cODMED) :
                new ObjectParameter("CODMED", typeof(string));
    
            var pRECIOParameter = pRECIO.HasValue ?
                new ObjectParameter("PRECIO", pRECIO) :
                new ObjectParameter("PRECIO", typeof(double));
    
            var cODPAYParameter = cODPAY != null ?
                new ObjectParameter("CODPAY", cODPAY) :
                new ObjectParameter("CODPAY", typeof(string));
    
            var cODESTADOParameter = cODESTADO != null ?
                new ObjectParameter("CODESTADO", cODESTADO) :
                new ObjectParameter("CODESTADO", typeof(string));
    
            var cODUSERParameter = cODUSER != null ?
                new ObjectParameter("CODUSER", cODUSER) :
                new ObjectParameter("CODUSER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADIRSERVAS", fECHAParameter, cODPACParameter, cODMEDParameter, pRECIOParameter, cODPAYParameter, cODESTADOParameter, cODUSERParameter);
        }
    
        public virtual int spadiEsp(string nom, string estado)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spadiEsp", nomParameter, estadoParameter);
        }
    }
}
